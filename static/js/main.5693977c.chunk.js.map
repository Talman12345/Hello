{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h5/Hader.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/juniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","Message","props","className","s","messag","avatar","src","alt","bubblein","name","message","time","messageData","HW1","Affair","onClick","deleteAffairCallback","affair","_id","priority","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","value","onChange","onBlur","GreetingContainer","users","addUserCallback","setName","setError","length","e","trimmedName","currentTarget","trim","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","PreJunior","Junior","JuniorPlus","PATH","RoutesPage","path","element","to","Header","btnBurger","setBtnBurger","classColor","isActive","active","passive","button","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.5693977c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messag\":\"Message_messag__1N8Yr\",\"avatar\":\"Message_avatar__2e2rF\",\"bubblein\":\"Message_bubblein__16k3T\",\"time\":\"Message_time__1t79L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2jFYc\",\"errorInput\":\"SuperInputText_errorInput__xqDt1\",\"error\":\"SuperInputText_error__1oRlN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passive\":\"Hader_passive__cJ1zx\",\"active\":\"Hader_active__1TAuP\",\"button\":\"Hader_button__27mzU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__39SY_\",\"column\":\"HW4_column__aHcTt\",\"testSpanError\":\"HW4_testSpanError__Jvwqi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__32zp0\",\"red\":\"SuperButton_red__3gpoh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1KG7X\",\"spanClassName\":\"SuperCheckbox_spanClassName__1RHMl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1X0BR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1BT6K\",\"error\":\"Greeting_error__2ezsz\"};","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","\nimport React from 'react'\nimport s from './Message.module.css'\n\n\ntype propsMessage = {\n    avatar: string;\n    name: string;\n    message: string;\n    time: string;\n\n}\n\n\nconst Message = (props: propsMessage) => {\n\n    return (\n\n        <div className={s.messag}>\n\n            <div className={s.avatar}>\n                <img src={props.avatar} alt=\"animeGirl\" />\n            </div>\n\n\n            <div className={s.bubblein}>\n                <h5>{props.name}</h5>\n                <p>{props.message}</p>\n                <p className={s.time}>{props.time}</p>\n            </div>\n\n\n        </div>\n\n\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message'\n\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n             homeworks 1\n\n\n\n            <Message\n               avatar={messageData.avatar}\n               name={messageData.name}\n               message={messageData.message}\n               time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport affairs from \"./Affairs\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n\n    affair: AffairType// need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    return (\n        <div key={props.affair._id}>\n            <button onClick={deleteCallback}>X</button>\n            <span>{props.affair.name}</span>\n\n            <span>{props.affair.priority}</span>\n\n\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\n\n\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType )=> void\n    deleteAffairCallback: (id:number)=> void\n}\n\nfunction Affairs (props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id}\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter(\"high\")}\n    const setMiddle = () => {props.setFilter(\"middle\")}\n    const setLow = () => {props.setFilter(\"low\")}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'// need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n}// need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    if (filter === 'high') return affairs.filter(f => f.priority === 'high')\n    if (filter === 'middle') return affairs.filter(f => f.priority === 'middle')\n    if (filter === 'low') return affairs.filter(f => f.priority === 'low')\n    else return affairs\n\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(f => f._id !== _id)\n    // need to fix\n}\n\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: any // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error: '' // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}\n                   onBlur={setNameCallback}\n            />\n            <span>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        const trimmedName = e.currentTarget.value.trim()\n\n        if(trimmedName) {\n            setName(trimmedName)\n        setError('')\n           }\n        else {\n            setName('')\n            setError('Бро, Ну-Ну-Ну :!')\n        }\n    }\n\n\n    const addUser = () => {\n        alert(`Hello ${name} !`)\n        addUserCallback(name)\n        setName('')\n        setError('')\n        // need to fix\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string// need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => {\n        // need to fix any\n        setUsers([{_id: v1(), name: name}, ...users]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if(onChange) { // если есть пропс onChange\n            onChange(e)\n        }// то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        if(onEnter // если есть пропс onEnter\n        && e.key === 'Enter'){ // и если нажата кнопка Enter\n      onEnter() }// то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? s.errorInput: s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\n\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\n\nfunction PreJunior() {\n    return (\n\n        <div>\n\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n\n        </div>\n\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react';\r\n\r\nexport const Junior = () => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\n\r\nexport const JuniorPlus = () => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react'\nimport Error404 from \"./pages/Error404\";\n\nimport PreJunior from \"./pages/PreJunior\";\nimport {Navigate, Route, Routes} from \"react-router-dom\";\nimport {Junior} from \"./pages/Junior\";\nimport {JuniorPlus} from \"./pages/juniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR:'/junior',\n    JUNIOR_PLUS:'/junior++'\n\n}\n\nexport function RoutesPage() {\n    return (\n        <div>\n\n\n            <Routes>\n\n                в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR\n                exact нужен чтоб указать полное совподение (что после '/' ничего не будет)\n\n                <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\n\n\n                у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу\n                <Route element={() => <Error404/>}/>\n\n            </Routes>\n\n        </div>\n    )\n}\n\n\n","import React, {useState} from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {PATH} from \"./Routes\";\nimport s from './Hader.module.css'\n\n\nfunction Header() {\n\n    const [btnBurger, setBtnBurger] = useState<boolean>(false)\n    const classColor = ({isActive}: any) => isActive ? s.active : s.passive\n\n    return (\n        <div>\n            <div>\n                <button className={s.button} onClick={() => {\n                    setBtnBurger(!btnBurger)\n                }}>Level\n                </button>\n                {btnBurger && <> <NavLink className={classColor} to={PATH.PRE_JUNIOR}>PreJunior</NavLink>\n                    <NavLink className={classColor} to={PATH.JUNIOR}>Junior</NavLink>\n                    <NavLink className={classColor} to={PATH.JUNIOR_PLUS}>Junior++</NavLink>\n                </>}\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\n\nimport {HashRouter} from \"react-router-dom\";\nimport {RoutesPage} from \"./Routes\";\n\n\nfunction HW5() {\n\n\n    return (\n\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n\n            <HashRouter>\n\n                <Header/>\n                <RoutesPage/>\n\n            </HashRouter>\n        </div>\n\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\n\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}